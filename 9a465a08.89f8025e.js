(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{188:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return m}));var o=t(2),r=t(11),a=(t(0),t(209)),l=t(211),i={title:"Component Controllers"},c={id:"component-controllers",title:"Component Controllers",description:"Remember the analogy made in Philosophy: components are like a stencil. They are an immutable snapshot of how a view should be configured at a given moment in time.",source:"@site/docs/component-controllers.md",permalink:"/docs/component-controllers",sidebar:"docs",previous:{title:"Scopes",permalink:"/docs/scopes"},next:{title:"Lifecycle Methods",permalink:"/docs/lifecycle-methods"}},s=[{value:"Creating Controllers",id:"creating-controllers",children:[]},{value:"Controller Flow",id:"controller-flow",children:[]},{value:"Communication between Component and Component Controller",id:"communication-between-component-and-component-controller",children:[]}],p={rightToc:s};function m(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Remember the analogy made in ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/philosophy"}),"Philosophy"),": components are like a stencil. They are an immutable snapshot of how a view should be configured at a given moment in time."),Object(a.b)("p",null,"Every time something changes, an entirely new component is created and the old one is thrown away. This means components are ",Object(a.b)("strong",{parentName:"p"},"short-lived"),", and their lifecycle is not under your control."),Object(a.b)("p",null,"But sometimes, you do need an object with a longer lifecycle. ",Object(a.b)("em",{parentName:"p"},"Component controllers")," fill that role:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"/docs/components-cant-be-delegates"}),"Components can't be delegates")," because they are short-lived, but component controllers can be delegates."),Object(a.b)("li",{parentName:"ul"},"Network downloads take time to complete; the component may have been recreated by the time the download completes. The controller can handle the callback."),Object(a.b)("li",{parentName:"ul"},"You may need an object to own some other object that should have a long lifetime.")),Object(a.b)("h2",{id:"creating-controllers"},"Creating Controllers"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Controllers are instantiated automatically by ComponentKit. Don't try to create them manually."),Object(a.b)("li",{parentName:"ul"},"Define a controller by simply creating a subclass of ",Object(a.b)("inlineCode",{parentName:"li"},"CKComponentController"),'; the naming convention is your component name plus "Controller". However, you can choose a different name or reuse an existing controller.'),Object(a.b)("li",{parentName:"ul"},"Your component must have a ",Object(a.b)("a",Object(o.a)({parentName:"li"},{href:"/docs/scopes"}),Object(a.b)("inlineCode",{parentName:"a"},"CKComponentScope"))," to have a controller. (If you forget, you will get an assertion failure.)"),Object(a.b)("li",{parentName:"ul"},"Your component must override ",Object(a.b)("inlineCode",{parentName:"li"},"+ (Class<CKComponentControllerProtocol>)controllerClass")," to indicate which class is its controller."),Object(a.b)("li",{parentName:"ul"},"Any ",Object(a.b)("inlineCode",{parentName:"li"},"CKComponentAction")," methods handled by your component can also be handled by the controller.")),Object(a.b)("h2",{id:"controller-flow"},"Controller Flow"),Object(a.b)("image",{src:Object(l.a)("assets/component-controllers.png"),alt:"Component Controller Flow",width:"338",height:"242"}),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"The component controller is ",Object(a.b)("strong",{parentName:"li"},"created")," with the first component."),Object(a.b)("li",{parentName:"ol"},"When the component is updated, a new instance is generated\u2026"),Object(a.b)("li",{parentName:"ol"},"But the component controller stays the same.")),Object(a.b)("h2",{id:"communication-between-component-and-component-controller"},"Communication between Component and Component Controller"),Object(a.b)("p",null,"There is a only a one-way communication channel between the component and its component controller - you can only pass data off of a component to a component controller. A component has no reference its corresponding component controller. This is by design."),Object(a.b)("p",null,"To pass data from a component to its controller, expose a ",Object(a.b)("inlineCode",{parentName:"p"},"@property")," on the component in a class extension. The controller can initialize itself with the properties in ",Object(a.b)("inlineCode",{parentName:"p"},"initWithComponent:"),". If these properties will be changing in subsequent state changes (i.e. a new component is being created with different values for these properties), keep them up to date in ",Object(a.b)("inlineCode",{parentName:"p"},"didUpdateComponent"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-objectivec"}),"@interface MySongComponent()\n@property (nonatomic, strong, readonly) MySong *song;     // All components for a controller share the same value\n@property (nonatomic, assign, readonly) BOOL isPlaying;   // Different components may have different values (part of component state)\n@end\n\n// In order to provide the component controller class in the `+ (Class<CKComponentControllerProtocol>)controllerClass`\n// method, we have to declare the controller before the component's implementation.\n@interface MySongComponentController : CKComponentController\n@end\n\n@implementation MySongComponent : CKCompositeComponent\n+ (instancetype)newWithSong:(MySong *)song\n{\n  CKComponentScope scope(self, song.unique_id);\n  const BOOL isPlaying = [scope.state() boolValue];\n  MySongComponent *const c =\n  [MySongComponent\n   newWithComponent:[SongUIComponent\n                     newWithIsPlaying:isPlaying]];\n  if (c) {\n    c->_song = song;\n    c->_isPlaying = isPlaying;\n  }\n  return c;\n}\n\n+ (Class<CKComponentControllerProtocol>)controllerClass\n{\n  return [MySongComponentController class];\n}\n@end\n\n@implementation MySongComponentController\n{\n  MySong *_song;\n}\n\n- (instancetype)initWithComponent:(MySongComponent *)component\n{\n  if (self = [super initWithComponent:component]) {\n    _song = component.song;\n    [_song.setDelegate:self];\n  }\n  return self;\n}\n\n- (void)songStateDidChange:(BOOL)isPlaying\n{\n  [self.component updateState:^{\n    return @(isPlaying);\n  } mode:CKUpdateModeAsynchronous];\n}\n\n- (void)didUpdateComponent\n{\n  // This only fires on a state *change* (i.e. not through the initializer path).\n}\n@end\n")))}m.isMDXComponent=!0},209:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),p=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},m=function(e){var n=p(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),b=o,d=m["".concat(l,".").concat(b)]||m[b]||u[b]||a;return t?r.a.createElement(d,i({ref:n},s,{components:t})):r.a.createElement(d,i({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=t[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"},210:function(e,n,t){"use strict";var o=t(0),r=t(59);n.a=function(){return Object(o.useContext)(r.a)}},211:function(e,n,t){"use strict";t.d(n,"a",(function(){return r}));t(212);var o=t(210);function r(e){var n=(Object(o.a)().siteConfig||{}).baseUrl,t=void 0===n?"/":n;if(!e)return e;return/^(https?:|\/\/)/.test(e)?e:e.startsWith("/")?t+e.slice(1):t+e}},212:function(e,n,t){"use strict";var o=t(8),r=t(10),a=t(213),l="".startsWith;o(o.P+o.F*t(214)("startsWith"),"String",{startsWith:function(e){var n=a(this,e,"startsWith"),t=r(Math.min(arguments.length>1?arguments[1]:void 0,n.length)),o=String(e);return l?l.call(n,o,t):n.slice(t,t+o.length)===o}})},213:function(e,n,t){var o=t(86),r=t(30);e.exports=function(e,n,t){if(o(n))throw TypeError("String#"+t+" doesn't accept regex!");return String(r(e))}},214:function(e,n,t){var o=t(3)("match");e.exports=function(e){var n=/./;try{"/./"[e](n)}catch(t){try{return n[o]=!1,!"/./"[e](n)}catch(r){}}return!0}}}]);