(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{195:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var i=n(2),a=n(11),o=(n(0),n(203)),r={id:"views",title:"Views"},c={id:"views",title:"Views",description:"Create components using the newWithView class method:",source:"@site/docs/views.md",permalink:"/docs/views",sidebar:"docs",previous:{title:"Composite Components",permalink:"/docs/composite-components"},next:{title:"Responder Chain",permalink:"/docs/responder-chain"}},s=[{value:"Primitive Arguments",id:"primitive-arguments",children:[]},{value:"Viewless Components",id:"viewless-components",children:[]},{value:"Advanced Views",id:"advanced-views",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Create components using the ",Object(o.b)("inlineCode",{parentName:"p"},"newWithView:size:")," class method:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-objectivec"}),"+ (instancetype)newWithView:(const CKComponentViewConfiguration &)view\n                       size:(const CKComponentSize &)size;\n")),Object(o.b)("p",null,"It's important to note that you don't pass a ",Object(o.b)("inlineCode",{parentName:"p"},"UIView")," directly, but a ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentViewConfiguration"),". What's that?"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-objectivec"}),"struct CKComponentViewConfiguration {\n  CKComponentViewClass viewClass;\n  std::unordered_map<CKComponentViewAttribute, id> attributes;\n};\n")),Object(o.b)("p",null,"The first field is a view class. Ignore ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentViewClass")," for now \u2014 in most cases you just pass a class like ",Object(o.b)("inlineCode",{parentName:"p"},"[UIImageView class]")," or ",Object(o.b)("inlineCode",{parentName:"p"},"[UIButton class]"),"."),Object(o.b)("p",null,"The second field holds a map of attributes to values: font, color, background image, and so forth. Again, ignore ",Object(o.b)("inlineCode",{parentName:"p"},"CKComponentViewAttribute")," for now; you can usually use a ",Object(o.b)("inlineCode",{parentName:"p"},"SEL")," as the attribute."),Object(o.b)("p",null,"Let's put one together:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-objectivec"}),"[CKComponent\n newWithView:{\n   [UIImageView class],\n   {\n     {@selector(setImage:), image},\n     {@selector(setContentMode:), @(UIViewContentModeCenter)} // Wrapping into an NSNumber\n   }\n }\n size:{image.size.width, image.size.height}];\n")),Object(o.b)("p",null,"That's all there is to it. ComponentKit does this for us:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Automatically creates or reuses a ",Object(o.b)("inlineCode",{parentName:"li"},"UIImageView")," when the component is mounted"),Object(o.b)("li",{parentName:"ul"},"Automatically calls ",Object(o.b)("inlineCode",{parentName:"li"},"setImage:")," and ",Object(o.b)("inlineCode",{parentName:"li"},"setContentMode:")," with the given values"),Object(o.b)("li",{parentName:"ul"},"Skips calling ",Object(o.b)("inlineCode",{parentName:"li"},"setImage:")," or ",Object(o.b)("inlineCode",{parentName:"li"},"setContentMode:")," if the value is unchanged between two updates \u2014 the most common case when updating a tree.")),Object(o.b)("h2",{id:"primitive-arguments"},"Primitive Arguments"),Object(o.b)("p",null,"The values in the map are of type ",Object(o.b)("inlineCode",{parentName:"p"},"id"),", so if you want to pass in primitive types like ",Object(o.b)("inlineCode",{parentName:"p"},"BOOL"),", you have to wrap them into an ",Object(o.b)("inlineCode",{parentName:"p"},"NSValue")," object using e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"@(value)")," and ComponentKit will unwrap them."),Object(o.b)("h2",{id:"viewless-components"},"Viewless Components"),Object(o.b)("p",null,"Often there exist logical components that don't need a corresponding view in the view hierarchy. For example a ",Object(o.b)("inlineCode",{parentName:"p"},"CKFlexboxComponent")," often doesn't need to have a view; it only needs to position various subviews inside a designated area. In such situations, just pass ",Object(o.b)("inlineCode",{parentName:"p"},"{}")," for the view configuration and no view is created. For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-objectivec"}),"[CKComponent newWithView:{} size:{}]\n")),Object(o.b)("p",null,"(You can also just use ",Object(o.b)("inlineCode",{parentName:"p"},"+new")," directly, which uses this as the default.)"),Object(o.b)("h2",{id:"advanced-views"},"Advanced Views"),Object(o.b)("p",null,"This is sufficient for most cases, but there is considerably more power when you need it. See ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/advanced-views"}),"Advanced Views")," if you want to learn more."))}p.isMDXComponent=!0},203:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,d=u["".concat(r,".").concat(m)]||u[m]||b[m]||o;return n?a.a.createElement(d,c({ref:t},l,{components:n})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var l=2;l<o;l++)r[l]=n[l];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);